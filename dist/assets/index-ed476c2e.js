import{ad as f,ae as l,J as w,o as E,c as h,a as x,b as s,w as n,V as i,d as c}from"./index-fc9b34ed.js";const k=f("excelImports",{actions:{async importTasks(t){try{return(await l.post("api/import",t,{headers:{"Content-Type":"multipart/form-data"},withCredentials:!0})).data}catch(r){throw r.response?(console.error("Erro ao importar tarefas:",r.response.data),new Error(r.response.data.message||"Erro ao importar tarefas")):r.request?(console.error("Erro na requisição ao importar tarefas:",r.request),new Error("Erro na requisição ao importar tarefas")):(console.error("Erro ao configurar a requisição ao importar tarefas:",r.message),new Error("Erro ao configurar a requisição ao importar tarefas"))}}}}),_={__name:"index",setup(t){const r=w(null),p=k(),u=e=>{r.value=e.target.files[0]},m=async()=>{if(!r.value){alert("Por favor, selecione um arquivo primeiro.");return}const e=new FormData;e.append("file",r.value);try{await p.importTasks(e),alert("Arquivo importado com sucesso!")}catch(a){console.error("Erro ao importar o arquivo:",a),alert("Erro ao importar o arquivo.")}},d=async()=>{try{const e=await l.get("/api/export-tasks",{responseType:"blob"}),a=window.URL.createObjectURL(new Blob([e.data])),o=document.createElement("a");o.href=a,o.setAttribute("download","tasks_export.csv"),document.body.appendChild(o),o.click(),o.remove()}catch(e){console.error("Erro ao exportar tasks:",e)}};return(e,a)=>(E(),h("div",null,[x("input",{type:"file",onChange:u},null,32),s(i,{onClick:m},{default:n(()=>[c("Upload")]),_:1}),s(i,{onClick:d},{default:n(()=>[c("Exportar Tasks")]),_:1})]))}};export{_ as default};
